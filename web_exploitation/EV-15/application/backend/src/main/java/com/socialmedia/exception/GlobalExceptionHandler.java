package com.socialmedia.exception;

import com.socialmedia.dto.ErrorResponse;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
@Slf4j
public class GlobalExceptionHandler {

    @ExceptionHandler(RuntimeException.class)
    public ResponseEntity<ErrorResponse> handleRuntimeException(RuntimeException e) {
        log.error("Runtime Exception: ", e);
        String message = String.format("Error: %s\nCause: %s\nLocation: %s", 
            e.getMessage(),
            e.getCause() != null ? e.getCause().getMessage() : "Unknown",
            e.getStackTrace().length > 0 ? e.getStackTrace()[0].toString() : "Unknown location"
        );
        ErrorResponse error = new ErrorResponse(message);
        return ResponseEntity.badRequest().body(error);
    }

    @ExceptionHandler(Exception.class)
    public ResponseEntity<ErrorResponse> handleException(Exception e) {
        log.error("Unexpected Exception: ", e);
        String message = String.format("Unexpected error: %s\nCause: %s\nLocation: %s", 
            e.getMessage(),
            e.getCause() != null ? e.getCause().getMessage() : "Unknown",
            e.getStackTrace().length > 0 ? e.getStackTrace()[0].toString() : "Unknown location"
        );
        ErrorResponse error = new ErrorResponse(message);
        return ResponseEntity.internalServerError().body(error);
    }
} 