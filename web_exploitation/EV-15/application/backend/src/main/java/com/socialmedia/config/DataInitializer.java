package com.socialmedia.config;

import com.socialmedia.model.Post;
import com.socialmedia.model.User;
import com.socialmedia.repository.PostRepository;
import com.socialmedia.repository.UserRepository;
import com.socialmedia.service.AuthService;
import com.socialmedia.dto.RegisterRequest;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import java.time.LocalDateTime;

@Component
@RequiredArgsConstructor
public class DataInitializer implements CommandLineRunner {
    private final UserRepository userRepository;
    private final PostRepository postRepository;
    private final AuthService authService;
    private final PasswordEncoder passwordEncoder;

    @Value("${ADMIN_PASSWORD}")
    private String adminPassword;

    @Value("${FLAG}")
    private String flag;

    @Override
    @Transactional
    public void run(String... args) {
        if (!userRepository.existsByEmail("admin@hack-tron.ai")) {
            RegisterRequest registerRequest = new RegisterRequest();
            registerRequest.setEmail("admin@hack-tron.ai");
            registerRequest.setPassword(adminPassword);
            
            User admin = userRepository.findByEmail("admin@hack-tron.ai")
                .orElseGet(() -> {
                    authService.register(registerRequest);
                    return userRepository.findByEmail("admin@hack-tron.ai")
                        .orElseThrow(() -> new RuntimeException("Failed to create admin user"));
                });

            Post flagPost = new Post();
            flagPost.setContent("Admins's user private posts: " + flag);
            flagPost.setUser(admin);
            flagPost.setCreatedAt(LocalDateTime.now());
            flagPost.setPrivate(true);
            postRepository.save(flagPost);
        }
    }
} 