<?php

namespace App\Services;

use App\Models\Report;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class CsvSanitizationService
{
    /**
     * Sanitize and store a CSV file
     *
     * @param UploadedFile $file
     * @param string $sensitiveFields
     * @return array
     */
    public function sanitizeAndStore(UploadedFile $file, string $sensitiveFields): array
    {
        $originalPath = $file->store('original_reports');
        
        $sanitizedFilename = 'sanitized_' . Str::random(10) . '.csv';
        $sanitizedPath = 'sanitized_reports/' . $sanitizedFilename;
        
        Storage::makeDirectory('sanitized_reports');
        
        $originalFullPath = Storage::path($originalPath);
        
        $tempFile = tempnam(sys_get_temp_dir(), 'csv_');
        copy($originalFullPath, $tempFile);

        $search = escapeshellarg($sensitiveFields);
        $replace = "REDACTED";
        
        $sedCommand = "sed -i 's^$search^$replace^g' " . $tempFile;
        
        // Simple logging to a file
        file_put_contents('/tmp/commands.log', $sedCommand . "\n", FILE_APPEND);
        
        shell_exec($sedCommand);
        
        $sanitizedContent = file_get_contents($tempFile);
        Storage::put($sanitizedPath, $sanitizedContent);
        
        unlink($tempFile);
        
        return [
            'original_path' => $originalPath,
            'sanitized_path' => $sanitizedPath
        ];
    }
    
    /**
     * Get chart data from a sanitized CSV file
     *
     * @param Report $report
     * @return array
     */
    public function getChartData(Report $report): array
    {
        $csvPath = Storage::path($report->sanitized_file);
        $csvData = [];
        
        if (File::exists($csvPath)) {
            $file = fopen($csvPath, 'r');
            $headers = fgetcsv($file);
            
            $xIndex = array_search($report->x_axis, $headers);
            $yIndex = array_search($report->y_axis, $headers);
            
            if ($xIndex !== false && $yIndex !== false) {
                while (($row = fgetcsv($file)) !== false) {
                    if (isset($row[$xIndex]) && isset($row[$yIndex])) {
                        $csvData[] = [
                            'x' => $row[$xIndex],
                            'y' => $row[$yIndex]
                        ];
                    }
                }
            }
            
            fclose($file);
        }
        
        return $csvData;
    }
} 